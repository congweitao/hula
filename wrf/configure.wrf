# configure.wrf
#
# Original configure options used:
# ./configure 
# Compiler choice: 4
# Nesting option: 1
#
# This file was automatically generated by the configure script in the
# top level directory. You may make changes to the settings in this
# file but be aware they will be overwritten each time you run configure.
# Ordinarily, it is necessary to run configure once, when the code is
# first installed.
#
# To permanently change options, change the settings for your platform
# in the file arch/configure_new.defaults then rerun configure.
#
SHELL           =       /bin/sh
DEVTOP          =       `pwd`
LIBINCLUDE      =       .
.SUFFIXES: .F .i .o .f90 .c

#### Get core settings from environment (set in compile script)
#### Note to add a core, this has to be added to.

COREDEFS = -DEM_CORE=$(WRF_EM_CORE) \
           -DNMM_CORE=$(WRF_NMM_CORE) -DNMM_MAX_DIM=2600 \
	   -DCOAMPS_CORE=$(WRF_COAMPS_CORE) \
	   -DDA_CORE=$(WRF_DA_CORE) \
           -DEXP_CORE=$(WRF_EXP_CORE)

#### Single location for defining total number of domains.  You need
#### at least 1 + 2*(number of total nests).  For example, 1 coarse
#### grid + three fine grids = 1 + 2(3) = 7, so MAX_DOMAINS=7.

MAX_DOMAINS	=	21

#### DM buffer length for the configuration flags.

CONFIG_BUF_LEN	=	65536

#### Size of bitmasks (in 4byte integers) of stream masks for WRF I/O

MAX_HISTORY = 25

IWORDSIZE = 4
DWORDSIZE = 8
LWORDSIZE = 4

##############################################################################
#### The settings in this section are defaults that may be overridden by the 
#### architecture-specific settings in the next section.  
##############################################################################

##############################################################################
#### NOTE:  Do not modify these default values here.  To override these 
####        values, make changes after "Architecture specific settings".  
##############################################################################

#### Native size (in bytes) of Fortran REAL data type on this architecture ####
#### Note:  to change real wordsize (for example, to promote REALs from 
####        4-byte to 8-byte), modify the definition of RWORDSIZE in the 
####        section following "Architecture specific settings".  Do not 
####        change NATIVE_RWORDSIZE as is it architecture-specific.  
NATIVE_RWORDSIZE = 4

#### Default sed command and script for Fortran source files ####
#SED_FTN = sed -f $(WRF_SRC_ROOT_DIR)/arch/standard.sed
SED_FTN = $(WRF_SRC_ROOT_DIR)/tools/standard.exe

# Hack to work around $(PWD) not changing during OSF1 build.  
# $(IO_GRIB_SHARE_DIR) is reset during the OSF1 build only.  
IO_GRIB_SHARE_DIR = 

#### ESMF switches                 ####
#### These are set up by Config.pl ####
# switch to use separately installed ESMF library for coupling:  1==true
ESMF_COUPLING       = 0
# select dependences on module_utility.o
ESMF_MOD_DEPENDENCE = $(WRF_SRC_ROOT_DIR)/external/esmf_time_f90/module_utility.o
# select -I options for external/io_esmf vs. external/esmf_time_f90
ESMF_IO_INC         = -I$(WRF_SRC_ROOT_DIR)/external/esmf_time_f90
# select -I options for separately installed ESMF library, if present
ESMF_MOD_INC        =  $(ESMF_IO_INC)
# select cpp token for external/io_esmf vs. external/esmf_time_f90
ESMF_IO_DEFS        = 
# select build target for external/io_esmf vs. external/esmf_time_f90
ESMF_TARGET         = esmf_time

# ESMFINCLUDEGOESHERE


#### NETCDF4 pieces

NETCDF4_IO_OPTS = -DUSE_NETCDF4_FEATURES -DWRFIO_NCD_LARGE_FILE_SUPPORT
GPFS            =
CURL            =
HDF5            =
ZLIB            =
DEP_LIB_PATH    = 
NETCDF4_DEP_LIB = $(DEP_LIB_PATH) $(HDF5) $(ZLIB) $(GPFS) $(CURL)

# NETCDF4INCLUDEGOESHERE


##############################################################################

LIBWRFLIB = libwrflib.a


#### Architecture specific settings ####

# Settings for   Linux   aarch64ï¼Œgnu8 OpenMPI3  (dm+sm)
#
DESCRIPTION             =       Arm($SFC/$SCC):Aarch64
DMPARALLEL              =       1
OMPCPP                  =       -D_OPENMP
OMP                     =       -fopenmp
OMPCC                   =       -fopenmp
SFC                     =       gfortran
SCC                     =       gcc
CCOMP                   =       gcc
DM_FC                   =       mpif90 
DM_CC                   =       mpicc -DMPI2_SUPPORT -DMPI2_THREAD_SUPPORT -DMPI2_SUPPORT -DMPI2_THREAD_SUPPORT
FC                      =       $(DM_FC)
CC                      =       $(DM_CC) -DFSEEKO64_OK 
LD                      =       $(FC)
RWORDSIZE               =       $(NATIVE_RWORDSIZE)
PROMOTION               =
ARCH_LOCAL              =
CFLAGS_LOCAL            =       -w -O3 -g
LDFLAGS_LOCAL           =       -fopenmp -Wl,-rpath=/opt/ohpc/pub/libs/gnu8/openmpi3/netcdf/4.7.1/lib -Wl,-rpath=/opt/ohpc/pub/libs/gnu8/openmpi3/netcdf-fortran/4.5.2/lib  -Wl,-rpath=/opt/ohpc/pub/libs/gnu8/openmpi3/hdf5/1.10.5/lib
FCOPTIM                 =       -O3 -mcpu=native -g -march=armv8.1-a -ffree-line-length-none
FCREDUCEDOPT            =       $(FCOPTIM)
FCNOOPT                 =       -O0 -g -ffree-line-length-none
FCDEBUG                 =       -g $(FCNOOPT)
FORMAT_FIXED            =       -ffixed-form
FORMAT_FREE             =       -ffree-form
FCSUFFIX                =
BYTESWAPIO              =       -fconvert=big-endian
FCBASEOPTS              =       -w $(FORMAT_FREE) $(BYTESWAPIO)
#MODULE_SRCH_FLAG       =
MODULE_SRCH_FLAG        =       -J $(WRF_SRC_ROOT_DIR)/main
TRADFLAG                =       -traditional-cpp
CPP                     =       /lib/cpp
AR                      =       ar
ARFLAGS                 =       ru
M4                      =       m4 -B 14000
RANLIB                  =       ranlib
CC_TOOLS                =       $(SCC)
LIB_EXTERNAL    	= \
-L$(WRF_SRC_ROOT_DIR)/external/io_netcdf -lwrfio_nf -L/opt/ohpc/pub/libs/gnu8/openmpi3/netcdf/4.6.3//lib  -lnetcdf -L/opt/ohpc/pub/libs/gnu8/openmpi3/netcdf-fortran/4.4.5/lib/ -lnetcdff  -L$(WRF_SRC_ROOT_DIR)/external/io_pnetcdf -lwrfio_pnf -L/opt/ohpc/pub/libs/gnu8/openmpi3/pnetcdf/1.11.1/lib -lpnetcdf   -L/opt/ohpc/pub/libs/gnu8/openmpi3/hdf5/1.10.5//lib -lhdf5_fortran -lhdf5 -lm -lz
